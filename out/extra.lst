                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module extra
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _Keyboard_Read
                                     12 	.globl _g_SLTSL
                                     13 	.globl _g_GRPACY
                                     14 	.globl _g_GRPACX
                                     15 	.globl _g_LOGOPR
                                     16 	.globl _g_CMASK
                                     17 	.globl _g_CLOC
                                     18 	.globl _g_FNKSTR
                                     19 	.globl _g_ATRBYT
                                     20 	.globl _g_BDRCLR
                                     21 	.globl _g_BAKCLR
                                     22 	.globl _g_FORCLR
                                     23 	.globl _g_CSRX
                                     24 	.globl _g_CSRY
                                     25 	.globl _g_CLIKSW
                                     26 	.globl _g_MLTPAT
                                     27 	.globl _g_MLTATR
                                     28 	.globl _g_MLTCGP
                                     29 	.globl _g_MLTCOL
                                     30 	.globl _g_MLTNAM
                                     31 	.globl _g_GRPPAT
                                     32 	.globl _g_GRPATR
                                     33 	.globl _g_GRPCGP
                                     34 	.globl _g_GRPCOL
                                     35 	.globl _g_GRPNAM
                                     36 	.globl _g_T32PAT
                                     37 	.globl _g_T32ATR
                                     38 	.globl _g_T32CGP
                                     39 	.globl _g_T32COL
                                     40 	.globl _g_T32NAM
                                     41 	.globl _g_TXTPAT
                                     42 	.globl _g_TXTATR
                                     43 	.globl _g_TXTCGP
                                     44 	.globl _g_TXTCOL
                                     45 	.globl _g_TXTNAM
                                     46 	.globl _g_CLMLST
                                     47 	.globl _g_CRTCNT
                                     48 	.globl _g_LINLEN
                                     49 	.globl _g_LINL32
                                     50 	.globl _g_LINL40
                                     51 	.globl _g_BDOS
                                     52 	.globl _g_MASTER
                                     53 	.globl _g_RAMAD3
                                     54 	.globl _g_RAMAD2
                                     55 	.globl _g_RAMAD1
                                     56 	.globl _g_RAMAD0
                                     57 	.globl _g_BREAKV
                                     58 	.globl _g_DISKVE
                                     59 	.globl _g_KANJTABLE
                                     60 	.globl _g_STRSRC
                                     61 	.globl _g_SUBRID
                                     62 	.globl _g_CHAR_16
                                     63 	.globl _g_MSXMID
                                     64 	.globl _g_MSXVER
                                     65 	.globl _g_ROMVersion
                                     66 	.globl _g_BASRVN
                                     67 	.globl _g_VDP_DW
                                     68 	.globl _g_VDP_DR
                                     69 	.globl _g_CGTABL
                                     70 	.globl _g_SVFFFD
                                     71 	.globl _g_RG27SAV
                                     72 	.globl _g_RG26SAV
                                     73 	.globl _g_RG25SAV
                                     74 	.globl _g_SVFFF8
                                     75 	.globl _g_MINROM
                                     76 	.globl _g_RG23SAV
                                     77 	.globl _g_RG22SAV
                                     78 	.globl _g_RG21SAV
                                     79 	.globl _g_RG20SAV
                                     80 	.globl _g_RG19SAV
                                     81 	.globl _g_RG18SAV
                                     82 	.globl _g_RG17SAV
                                     83 	.globl _g_RG16SAV
                                     84 	.globl _g_RG15SAV
                                     85 	.globl _g_RG14SAV
                                     86 	.globl _g_RG13SAV
                                     87 	.globl _g_RG12SAV
                                     88 	.globl _g_RG11SAV
                                     89 	.globl _g_RG10SAV
                                     90 	.globl _g_RG09SAV
                                     91 	.globl _g_RG08SAV
                                     92 	.globl _g_PROCNM
                                     93 	.globl _g_SLTWRK
                                     94 	.globl _g_SLTATR
                                     95 	.globl _g_SLTTBL
                                     96 	.globl _g_EXPTBL
                                     97 	.globl _g_MNROM
                                     98 	.globl _g_DRWANG
                                     99 	.globl _g_DRWSCL
                                    100 	.globl _g_DRWFLG
                                    101 	.globl _g_GYPOS
                                    102 	.globl _g_GXPOS
                                    103 	.globl _g_BRDATR
                                    104 	.globl _g_CASPRV
                                    105 	.globl _g_OLDSCR
                                    106 	.globl _g_SCRMOD
                                    107 	.globl _g_FLBMEM
                                    108 	.globl _g_KANAMD
                                    109 	.globl _g_KANAST
                                    110 	.globl _g_CAPST
                                    111 	.globl _g_CSTYLE
                                    112 	.globl _g_CSRSW
                                    113 	.globl _g_INSFLG
                                    114 	.globl _g_ESCCNT
                                    115 	.globl _g_GRPHED
                                    116 	.globl _g_WINWID
                                    117 	.globl _g_LOWLIM
                                    118 	.globl _g_INTCNT
                                    119 	.globl _g_INTVAL
                                    120 	.globl _g_JIFFY
                                    121 	.globl _g_PADX
                                    122 	.globl _g_PADY
                                    123 	.globl _g_INTFLG
                                    124 	.globl _g_RTYCNT
                                    125 	.globl _g_TRPTBL
                                    126 	.globl _g_HIMEM
                                    127 	.globl _g_BOTTOM
                                    128 	.globl _g_PATWRK
                                    129 	.globl _g_LINWRK
                                    130 	.globl _g_KEYBUF
                                    131 	.globl _g_NEWKEY
                                    132 	.globl _g_OLDKEY
                                    133 	.globl _g_CLIKFL
                                    134 	.globl _g_ONGSBF
                                    135 	.globl _g_FNKFLG
                                    136 	.globl _g_FNKSWI
                                    137 	.globl _g_CODSAV
                                    138 	.globl _g_FSTPOS
                                    139 	.globl _g_LINTTB
                                    140 	.globl _g_BASROM
                                    141 	.globl _g_ENSTOP
                                    142 	.globl _g_VCBC
                                    143 	.globl _g_VCBB
                                    144 	.globl _g_VCBA
                                    145 	.globl _g_PLYCNT
                                    146 	.globl _g_MUSICF
                                    147 	.globl _g_QUEUEN
                                    148 	.globl _g_MCLPTR
                                    149 	.globl _g_MCLLEN
                                    150 	.globl _g_SAVVOL
                                    151 	.globl _g_VOICEN
                                    152 	.globl _g_SAVSP
                                    153 	.globl _g_PRSCNT
                                    154 	.globl _g_LSTMOD
                                    155 	.globl _g_LSTCOM
                                    156 	.globl _g_COMMSK
                                    157 	.globl _g_ESTBLS
                                    158 	.globl _g_FLAGS
                                    159 	.globl _g_ERRORS
                                    160 	.globl _g_DATCNT
                                    161 	.globl _g_DEVNUM
                                    162 	.globl _g_OLDINT
                                    163 	.globl _g_OLDSTT
                                    164 	.globl _g_MEXBIh
                                    165 	.globl _g_RSIQLN
                                    166 	.globl _g_RSFCB
                                    167 	.globl _g_TOCNT
                                    168 	.globl _g_RSTMP
                                    169 	.globl _g_YSAVE
                                    170 	.globl _g_XSAVE
                                    171 	.globl _g_NORUSE
                                    172 	.globl _g_MODE
                                    173 	.globl _g_ROMA
                                    174 	.globl _g_CHRCNT
                                    175 	.globl _g_EXBRSA
                                    176 	.globl _g_AVCSAV
                                    177 	.globl _g_ACPAGE
                                    178 	.globl _g_DPPAGE
                                    179 	.globl _g_RS2IQ
                                    180 	.globl _g_VOICCQ
                                    181 	.globl _g_VOICBQ
                                    182 	.globl _g_VOICAQ
                                    183 	.globl _g_QUEBAK
                                    184 	.globl _g_QUETAB
                                    185 	.globl _g_ASPCT2
                                    186 	.globl _g_ASPCT1
                                    187 	.globl _g_HEADER
                                    188 	.globl _g_HIGH
                                    189 	.globl _g_LOW
                                    190 	.globl _g_CS240
                                    191 	.globl _g_CS120
                                    192 	.globl _g_GETPNT
                                    193 	.globl _g_PUTPNT
                                    194 	.globl _g_REPCNT
                                    195 	.globl _g_SCNCNT
                                    196 	.globl _g_FRCNEW
                                    197 	.globl _g_QUEUES
                                    198 	.globl _g_MINUPD
                                    199 	.globl _g_MAXUPD
                                    200 	.globl _g_TRGFLG
                                    201 	.globl _g_STATFL
                                    202 	.globl _g_RG7SAV
                                    203 	.globl _g_RG6SAV
                                    204 	.globl _g_RG5SAV
                                    205 	.globl _g_RG4SAV
                                    206 	.globl _g_RG3SAV
                                    207 	.globl _g_RG2SAV
                                    208 	.globl _g_RG1SAV
                                    209 	.globl _g_RG0SAV
                                    210 	.globl _g_CNSDFG
                                    211 	.globl _g_USRTAB
                                    212 	.globl _g_CLPRIM
                                    213 	.globl _g_WRPRIM
                                    214 	.globl _g_RDPRIM
                                    215 	.globl _readKeyboard
                                    216 ;--------------------------------------------------------
                                    217 ; special function registers
                                    218 ;--------------------------------------------------------
                         000000A8   219 _g_PortPrimarySlot	=	0x00a8
                         000000A9   220 _g_PortReadKeyboard	=	0x00a9
                         000000AA   221 _g_PortAccessKeyboard	=	0x00aa
                         000000AB   222 _g_PortControl	=	0x00ab
                         00000098   223 _g_VDP_DataPort	=	0x0098
                         00000099   224 _g_VDP_RegPort	=	0x0099
                         00000099   225 _g_VDP_AddrPort	=	0x0099
                         00000099   226 _g_VDP_StatPort	=	0x0099
                         000000A0   227 _g_PSG_RegPort	=	0x00a0
                         000000A1   228 _g_PSG_DataPort	=	0x00a1
                         000000A2   229 _g_PSG_StatPort	=	0x00a2
                         00000010   230 _g_PSG_Ext_RegPort	=	0x0010
                         00000011   231 _g_PSG_Ext_DataPort	=	0x0011
                         00000012   232 _g_PSG_Ext_StatPort	=	0x0012
                         0000007C   233 _g_MSXMusic_IndexPort	=	0x007c
                         0000007D   234 _g_MSXMusic_DataPort	=	0x007d
                         000000C0   235 _g_MSXAudio_IndexPort	=	0x00c0
                         000000C1   236 _g_MSXAudio_DataPort	=	0x00c1
                         000000C2   237 _g_MSXAudio_IndexPort2	=	0x00c2
                         000000C3   238 _g_MSXAudio_DataPort2	=	0x00c3
                         000000B4   239 _g_RTC_AddrPort	=	0x00b4
                         000000B5   240 _g_RTC_DataPort	=	0x00b5
                                    241 ;--------------------------------------------------------
                                    242 ; ram data
                                    243 ;--------------------------------------------------------
                                    244 	.area _DATA
                         0000F3AE   245 _g_LINL40	=	0xf3ae
                         0000F3AF   246 _g_LINL32	=	0xf3af
                         0000F3B0   247 _g_LINLEN	=	0xf3b0
                         0000F3B1   248 _g_CRTCNT	=	0xf3b1
                         0000F3B2   249 _g_CLMLST	=	0xf3b2
                         0000F3B3   250 _g_TXTNAM	=	0xf3b3
                         0000F3B5   251 _g_TXTCOL	=	0xf3b5
                         0000F3B7   252 _g_TXTCGP	=	0xf3b7
                         0000F3B9   253 _g_TXTATR	=	0xf3b9
                         0000F3BB   254 _g_TXTPAT	=	0xf3bb
                         0000F3BD   255 _g_T32NAM	=	0xf3bd
                         0000F3BF   256 _g_T32COL	=	0xf3bf
                         0000F3C1   257 _g_T32CGP	=	0xf3c1
                         0000F3C3   258 _g_T32ATR	=	0xf3c3
                         0000F3C5   259 _g_T32PAT	=	0xf3c5
                         0000F3C7   260 _g_GRPNAM	=	0xf3c7
                         0000F3C9   261 _g_GRPCOL	=	0xf3c9
                         0000F3CB   262 _g_GRPCGP	=	0xf3cb
                         0000F3CD   263 _g_GRPATR	=	0xf3cd
                         0000F3CF   264 _g_GRPPAT	=	0xf3cf
                         0000F3D1   265 _g_MLTNAM	=	0xf3d1
                         0000F3D3   266 _g_MLTCOL	=	0xf3d3
                         0000F3D5   267 _g_MLTCGP	=	0xf3d5
                         0000F3D7   268 _g_MLTATR	=	0xf3d7
                         0000F3D9   269 _g_MLTPAT	=	0xf3d9
                         0000F3DB   270 _g_CLIKSW	=	0xf3db
                         0000F3DC   271 _g_CSRY	=	0xf3dc
                         0000F3DD   272 _g_CSRX	=	0xf3dd
                         0000F3E9   273 _g_FORCLR	=	0xf3e9
                         0000F3EA   274 _g_BAKCLR	=	0xf3ea
                         0000F3EB   275 _g_BDRCLR	=	0xf3eb
                         0000F3F2   276 _g_ATRBYT	=	0xf3f2
                         0000F87F   277 _g_FNKSTR	=	0xf87f
                         0000F92A   278 _g_CLOC	=	0xf92a
                         0000F92C   279 _g_CMASK	=	0xf92c
                         0000FB02   280 _g_LOGOPR	=	0xfb02
                         0000FCB7   281 _g_GRPACX	=	0xfcb7
                         0000FCB9   282 _g_GRPACY	=	0xfcb9
                         0000FFFF   283 _g_SLTSL	=	0xffff
                                    284 ;--------------------------------------------------------
                                    285 ; ram data
                                    286 ;--------------------------------------------------------
                                    287 	.area _INITIALIZED
                                    288 ;--------------------------------------------------------
                                    289 ; absolute external ram data
                                    290 ;--------------------------------------------------------
                                    291 	.area _DABS (ABS)
                                    292 ;--------------------------------------------------------
                                    293 ; global & static initialisations
                                    294 ;--------------------------------------------------------
                                    295 	.area _HOME
                                    296 	.area _GSINIT
                                    297 	.area _GSFINAL
                                    298 	.area _GSINIT
                                    299 ;--------------------------------------------------------
                                    300 ; Home
                                    301 ;--------------------------------------------------------
                                    302 	.area _HOME
                                    303 	.area _HOME
                                    304 ;--------------------------------------------------------
                                    305 ; code
                                    306 ;--------------------------------------------------------
                                    307 	.area _CODE
                                    308 ;./extra.c:4: u8 readKeyboard(void)
                                    309 ;	---------------------------------
                                    310 ; Function readKeyboard
                                    311 ; ---------------------------------
    00000000                        312 _readKeyboard::
    00000000 DD E5            [15]  313 	push	ix
    00000002 DD 21 00 00      [14]  314 	ld	ix,#0
    00000006 DD 39            [15]  315 	add	ix,sp
    00000008 21 F5 FF         [10]  316 	ld	hl, #-11
    0000000B 39               [11]  317 	add	hl, sp
    0000000C F9               [ 6]  318 	ld	sp, hl
                                    319 ;./extra.c:6: u8 row[11] = {0,0,0,0,0,0,0,0,0,0,0};
    0000000D 21 00 00         [10]  320 	ld	hl, #0
    00000010 39               [11]  321 	add	hl, sp
    00000011 4D               [ 4]  322 	ld	c, l
    00000012 44               [ 4]  323 	ld	b, h
    00000013 AF               [ 4]  324 	xor	a, a
    00000014 02               [ 7]  325 	ld	(bc), a
    00000015 DD 36 F6 00      [19]  326 	ld	-10 (ix), #0x00
    00000019 DD 36 F7 00      [19]  327 	ld	-9 (ix), #0x00
    0000001D DD 36 F8 00      [19]  328 	ld	-8 (ix), #0x00
    00000021 DD 36 F9 00      [19]  329 	ld	-7 (ix), #0x00
    00000025 DD 36 FA 00      [19]  330 	ld	-6 (ix), #0x00
    00000029 DD 36 FB 00      [19]  331 	ld	-5 (ix), #0x00
    0000002D DD 36 FC 00      [19]  332 	ld	-4 (ix), #0x00
    00000031 DD 36 FD 00      [19]  333 	ld	-3 (ix), #0x00
    00000035 DD 36 FE 00      [19]  334 	ld	-2 (ix), #0x00
    00000039 DD 36 FF 00      [19]  335 	ld	-1 (ix), #0x00
                                    336 ;./extra.c:7: for(u8 c=0;c<12;c++)
    0000003D 1E 00            [ 7]  337 	ld	e, #0x00
    0000003F                        338 00127$:
    0000003F 7B               [ 4]  339 	ld	a, e
    00000040 D6 0C            [ 7]  340 	sub	a, #0x0c
    00000042 30 10            [12]  341 	jr	NC, 00101$
                                    342 ;./extra.c:8: row[c] = Keyboard_Read(c);
    00000044 6B               [ 4]  343 	ld	l, e
    00000045 26 00            [ 7]  344 	ld	h, #0x00
    00000047 09               [11]  345 	add	hl, bc
    00000048 E5               [11]  346 	push	hl
    00000049 6B               [ 4]  347 	ld	l, e
                                    348 ;	spillPairReg hl
                                    349 ;	spillPairReg hl
    0000004A CDr00r00         [17]  350 	call	_Keyboard_Read
    0000004D 7D               [ 4]  351 	ld	a, l
    0000004E E1               [10]  352 	pop	hl
    0000004F 77               [ 7]  353 	ld	(hl), a
                                    354 ;./extra.c:7: for(u8 c=0;c<12;c++)
    00000050 1C               [ 4]  355 	inc	e
    00000051 C3r3Fr00         [10]  356 	jp	00127$
    00000054                        357 00101$:
                                    358 ;./extra.c:9: if(IS_KEY_PRESSED(row[1], KEY_9))
    00000054 DD 5E F6         [19]  359 	ld	e, -10 (ix)
    00000057 CB 4B            [ 8]  360 	bit	1, e
    00000059 20 05            [12]  361 	jr	NZ, 00103$
                                    362 ;./extra.c:10: return KEY_9;
    0000005B 3E 11            [ 7]  363 	ld	a, #0x11
    0000005D C3rC3r00         [10]  364 	jp	00129$
    00000060                        365 00103$:
                                    366 ;./extra.c:11: if(IS_KEY_PRESSED(row[1], KEY_8))
    00000060 CB 43            [ 8]  367 	bit	0, e
    00000062 20 05            [12]  368 	jr	NZ, 00105$
                                    369 ;./extra.c:12: return KEY_8;
    00000064 3E 01            [ 7]  370 	ld	a, #0x01
    00000066 C3rC3r00         [10]  371 	jp	00129$
    00000069                        372 00105$:
                                    373 ;./extra.c:13: if(IS_KEY_PRESSED(row[0], KEY_7))
    00000069 0A               [ 7]  374 	ld	a, (bc)
    0000006A CB 7F            [ 8]  375 	bit	7, a
    0000006C 20 05            [12]  376 	jr	NZ, 00107$
                                    377 ;./extra.c:14: return KEY_7;
    0000006E 3E 70            [ 7]  378 	ld	a, #0x70
    00000070 C3rC3r00         [10]  379 	jp	00129$
    00000073                        380 00107$:
                                    381 ;./extra.c:15: if(IS_KEY_PRESSED(row[0], KEY_6))
    00000073 CB 77            [ 8]  382 	bit	6, a
    00000075 20 05            [12]  383 	jr	NZ, 00109$
                                    384 ;./extra.c:16: return KEY_6;
    00000077 3E 60            [ 7]  385 	ld	a, #0x60
    00000079 C3rC3r00         [10]  386 	jp	00129$
    0000007C                        387 00109$:
                                    388 ;./extra.c:17: if(IS_KEY_PRESSED(row[0], KEY_5))
    0000007C CB 6F            [ 8]  389 	bit	5, a
    0000007E 20 05            [12]  390 	jr	NZ, 00111$
                                    391 ;./extra.c:18: return KEY_5;
    00000080 3E 50            [ 7]  392 	ld	a, #0x50
    00000082 C3rC3r00         [10]  393 	jp	00129$
    00000085                        394 00111$:
                                    395 ;./extra.c:19: if(IS_KEY_PRESSED(row[0], KEY_4))
    00000085 CB 67            [ 8]  396 	bit	4, a
    00000087 20 05            [12]  397 	jr	NZ, 00113$
                                    398 ;./extra.c:20: return KEY_4;
    00000089 3E 40            [ 7]  399 	ld	a, #0x40
    0000008B C3rC3r00         [10]  400 	jp	00129$
    0000008E                        401 00113$:
                                    402 ;./extra.c:21: if(IS_KEY_PRESSED(row[0], KEY_3))
    0000008E CB 5F            [ 8]  403 	bit	3, a
    00000090 20 05            [12]  404 	jr	NZ, 00115$
                                    405 ;./extra.c:22: return KEY_3;
    00000092 3E 30            [ 7]  406 	ld	a, #0x30
    00000094 C3rC3r00         [10]  407 	jp	00129$
    00000097                        408 00115$:
                                    409 ;./extra.c:23: if(IS_KEY_PRESSED(row[0], KEY_2))
    00000097 CB 57            [ 8]  410 	bit	2, a
    00000099 20 05            [12]  411 	jr	NZ, 00117$
                                    412 ;./extra.c:24: return KEY_2;
    0000009B 3E 20            [ 7]  413 	ld	a, #0x20
    0000009D C3rC3r00         [10]  414 	jp	00129$
    000000A0                        415 00117$:
                                    416 ;./extra.c:25: if(IS_KEY_PRESSED(row[0], KEY_1))
    000000A0 CB 4F            [ 8]  417 	bit	1, a
    000000A2 20 05            [12]  418 	jr	NZ, 00119$
                                    419 ;./extra.c:26: return KEY_1;
    000000A4 3E 10            [ 7]  420 	ld	a, #0x10
    000000A6 C3rC3r00         [10]  421 	jp	00129$
    000000A9                        422 00119$:
                                    423 ;./extra.c:27: if(IS_KEY_PRESSED(row[0], KEY_0))
    000000A9 0F               [ 4]  424 	rrca
    000000AA 38 04            [12]  425 	jr	C, 00121$
                                    426 ;./extra.c:28: return KEY_0;
    000000AC AF               [ 4]  427 	xor	a, a
    000000AD C3rC3r00         [10]  428 	jp	00129$
    000000B0                        429 00121$:
                                    430 ;./extra.c:31: if(IS_KEY_PRESSED(row[1], KEY_1_2))
    000000B0 CB 53            [ 8]  431 	bit	2, e
    000000B2 20 05            [12]  432 	jr	NZ, 00123$
                                    433 ;./extra.c:32: return KEY_1_2;
    000000B4 3E 21            [ 7]  434 	ld	a, #0x21
    000000B6 C3rC3r00         [10]  435 	jp	00129$
    000000B9                        436 00123$:
                                    437 ;./extra.c:33: if(IS_KEY_PRESSED(row[7], KEY_ESC))
    000000B9 DD CB FC 56      [20]  438 	bit	2, -4 (ix)
                                    439 ;./extra.c:34: return KEY_ESC;
                                    440 ;./extra.c:36: return 255;
    000000BD 3E 27            [ 7]  441 	ld	a, #0x27
    000000BF 28 02            [12]  442 	jr	Z, 00129$
    000000C1 3E FF            [ 7]  443 	ld	a, #0xff
    000000C3                        444 00129$:
                                    445 ;./extra.c:37: }
    000000C3 DD F9            [10]  446 	ld	sp, ix
    000000C5 DD E1            [14]  447 	pop	ix
    000000C7 C9               [10]  448 	ret
                         0000F380   449 _g_RDPRIM	=	0xf380
                         0000F385   450 _g_WRPRIM	=	0xf385
                         0000F38C   451 _g_CLPRIM	=	0xf38c
                         0000F39A   452 _g_USRTAB	=	0xf39a
                         0000F3DE   453 _g_CNSDFG	=	0xf3de
                         0000F3DF   454 _g_RG0SAV	=	0xf3df
                         0000F3E0   455 _g_RG1SAV	=	0xf3e0
                         0000F3E1   456 _g_RG2SAV	=	0xf3e1
                         0000F3E2   457 _g_RG3SAV	=	0xf3e2
                         0000F3E3   458 _g_RG4SAV	=	0xf3e3
                         0000F3E4   459 _g_RG5SAV	=	0xf3e4
                         0000F3E5   460 _g_RG6SAV	=	0xf3e5
                         0000F3E6   461 _g_RG7SAV	=	0xf3e6
                         0000F3E7   462 _g_STATFL	=	0xf3e7
                         0000F3E8   463 _g_TRGFLG	=	0xf3e8
                         0000F3EC   464 _g_MAXUPD	=	0xf3ec
                         0000F3EF   465 _g_MINUPD	=	0xf3ef
                         0000F3F3   466 _g_QUEUES	=	0xf3f3
                         0000F3F5   467 _g_FRCNEW	=	0xf3f5
                         0000F3F6   468 _g_SCNCNT	=	0xf3f6
                         0000F3F7   469 _g_REPCNT	=	0xf3f7
                         0000F3F8   470 _g_PUTPNT	=	0xf3f8
                         0000F3FA   471 _g_GETPNT	=	0xf3fa
                         0000F3FC   472 _g_CS120	=	0xf3fc
                         0000F401   473 _g_CS240	=	0xf401
                         0000F406   474 _g_LOW	=	0xf406
                         0000F408   475 _g_HIGH	=	0xf408
                         0000F40A   476 _g_HEADER	=	0xf40a
                         0000F40B   477 _g_ASPCT1	=	0xf40b
                         0000F40D   478 _g_ASPCT2	=	0xf40d
                         0000F959   479 _g_QUETAB	=	0xf959
                         0000F971   480 _g_QUEBAK	=	0xf971
                         0000F975   481 _g_VOICAQ	=	0xf975
                         0000F9F5   482 _g_VOICBQ	=	0xf9f5
                         0000FA75   483 _g_VOICCQ	=	0xfa75
                         0000FAF5   484 _g_RS2IQ	=	0xfaf5
                         0000FAF5   485 _g_DPPAGE	=	0xfaf5
                         0000FAF6   486 _g_ACPAGE	=	0xfaf6
                         0000FAF7   487 _g_AVCSAV	=	0xfaf7
                         0000FAF8   488 _g_EXBRSA	=	0xfaf8
                         0000FAF9   489 _g_CHRCNT	=	0xfaf9
                         0000FAFA   490 _g_ROMA	=	0xfafa
                         0000FAFC   491 _g_MODE	=	0xfafc
                         0000FAFD   492 _g_NORUSE	=	0xfafd
                         0000FAFE   493 _g_XSAVE	=	0xfafe
                         0000FB00   494 _g_YSAVE	=	0xfb00
                         0000FB03   495 _g_RSTMP	=	0xfb03
                         0000FB03   496 _g_TOCNT	=	0xfb03
                         0000FB04   497 _g_RSFCB	=	0xfb04
                         0000FB06   498 _g_RSIQLN	=	0xfb06
                         0000FB07   499 _g_MEXBIh	=	0xfb07
                         0000FB0C   500 _g_OLDSTT	=	0xfb0c
                         0000FB0C   501 _g_OLDINT	=	0xfb0c
                         0000FB16   502 _g_DEVNUM	=	0xfb16
                         0000FB17   503 _g_DATCNT	=	0xfb17
                         0000FB1A   504 _g_ERRORS	=	0xfb1a
                         0000FB1B   505 _g_FLAGS	=	0xfb1b
                         0000FB1C   506 _g_ESTBLS	=	0xfb1c
                         0000FB1D   507 _g_COMMSK	=	0xfb1d
                         0000FB1E   508 _g_LSTCOM	=	0xfb1e
                         0000FB1F   509 _g_LSTMOD	=	0xfb1f
                         0000FB35   510 _g_PRSCNT	=	0xfb35
                         0000FB36   511 _g_SAVSP	=	0xfb36
                         0000FB38   512 _g_VOICEN	=	0xfb38
                         0000FB39   513 _g_SAVVOL	=	0xfb39
                         0000FB3B   514 _g_MCLLEN	=	0xfb3b
                         0000FB3C   515 _g_MCLPTR	=	0xfb3c
                         0000FB3E   516 _g_QUEUEN	=	0xfb3e
                         0000FB3F   517 _g_MUSICF	=	0xfb3f
                         0000FB40   518 _g_PLYCNT	=	0xfb40
                         0000FB41   519 _g_VCBA	=	0xfb41
                         0000FB66   520 _g_VCBB	=	0xfb66
                         0000FB8B   521 _g_VCBC	=	0xfb8b
                         0000FBB0   522 _g_ENSTOP	=	0xfbb0
                         0000FBB1   523 _g_BASROM	=	0xfbb1
                         0000FBB2   524 _g_LINTTB	=	0xfbb2
                         0000FBCA   525 _g_FSTPOS	=	0xfbca
                         0000FBCC   526 _g_CODSAV	=	0xfbcc
                         0000FBCD   527 _g_FNKSWI	=	0xfbcd
                         0000FBCE   528 _g_FNKFLG	=	0xfbce
                         0000FBD8   529 _g_ONGSBF	=	0xfbd8
                         0000FBD9   530 _g_CLIKFL	=	0xfbd9
                         0000FBDA   531 _g_OLDKEY	=	0xfbda
                         0000FBE5   532 _g_NEWKEY	=	0xfbe5
                         0000FBF0   533 _g_KEYBUF	=	0xfbf0
                         0000FC18   534 _g_LINWRK	=	0xfc18
                         0000FC40   535 _g_PATWRK	=	0xfc40
                         0000FC48   536 _g_BOTTOM	=	0xfc48
                         0000FC4A   537 _g_HIMEM	=	0xfc4a
                         0000FC4C   538 _g_TRPTBL	=	0xfc4c
                         0000FC9A   539 _g_RTYCNT	=	0xfc9a
                         0000FC9B   540 _g_INTFLG	=	0xfc9b
                         0000FC9C   541 _g_PADY	=	0xfc9c
                         0000FC9D   542 _g_PADX	=	0xfc9d
                         0000FC9E   543 _g_JIFFY	=	0xfc9e
                         0000FCA0   544 _g_INTVAL	=	0xfca0
                         0000FCA2   545 _g_INTCNT	=	0xfca2
                         0000FCA4   546 _g_LOWLIM	=	0xfca4
                         0000FCA5   547 _g_WINWID	=	0xfca5
                         0000FCA6   548 _g_GRPHED	=	0xfca6
                         0000FCA7   549 _g_ESCCNT	=	0xfca7
                         0000FCA8   550 _g_INSFLG	=	0xfca8
                         0000FCA9   551 _g_CSRSW	=	0xfca9
                         0000FCAA   552 _g_CSTYLE	=	0xfcaa
                         0000FCAB   553 _g_CAPST	=	0xfcab
                         0000FCAC   554 _g_KANAST	=	0xfcac
                         0000FCAD   555 _g_KANAMD	=	0xfcad
                         0000FCAE   556 _g_FLBMEM	=	0xfcae
                         0000FCAF   557 _g_SCRMOD	=	0xfcaf
                         0000FCB0   558 _g_OLDSCR	=	0xfcb0
                         0000FCB1   559 _g_CASPRV	=	0xfcb1
                         0000FCB2   560 _g_BRDATR	=	0xfcb2
                         0000FCB3   561 _g_GXPOS	=	0xfcb3
                         0000FCB5   562 _g_GYPOS	=	0xfcb5
                         0000FCBB   563 _g_DRWFLG	=	0xfcbb
                         0000FCBC   564 _g_DRWSCL	=	0xfcbc
                         0000FCBD   565 _g_DRWANG	=	0xfcbd
                         0000FCC1   566 _g_MNROM	=	0xfcc1
                         0000FCC1   567 _g_EXPTBL	=	0xfcc1
                         0000FCC5   568 _g_SLTTBL	=	0xfcc5
                         0000FCC9   569 _g_SLTATR	=	0xfcc9
                         0000FD09   570 _g_SLTWRK	=	0xfd09
                         0000FD89   571 _g_PROCNM	=	0xfd89
                         0000FFE7   572 _g_RG08SAV	=	0xffe7
                         0000FFE8   573 _g_RG09SAV	=	0xffe8
                         0000FFE9   574 _g_RG10SAV	=	0xffe9
                         0000FFEA   575 _g_RG11SAV	=	0xffea
                         0000FFEB   576 _g_RG12SAV	=	0xffeb
                         0000FFEC   577 _g_RG13SAV	=	0xffec
                         0000FFED   578 _g_RG14SAV	=	0xffed
                         0000FFEE   579 _g_RG15SAV	=	0xffee
                         0000FFEF   580 _g_RG16SAV	=	0xffef
                         0000FFF0   581 _g_RG17SAV	=	0xfff0
                         0000FFF1   582 _g_RG18SAV	=	0xfff1
                         0000FFF2   583 _g_RG19SAV	=	0xfff2
                         0000FFF3   584 _g_RG20SAV	=	0xfff3
                         0000FFF4   585 _g_RG21SAV	=	0xfff4
                         0000FFF5   586 _g_RG22SAV	=	0xfff5
                         0000FFF6   587 _g_RG23SAV	=	0xfff6
                         0000FFF7   588 _g_MINROM	=	0xfff7
                         0000FFF8   589 _g_SVFFF8	=	0xfff8
                         0000FFFA   590 _g_RG25SAV	=	0xfffa
                         0000FFFB   591 _g_RG26SAV	=	0xfffb
                         0000FFFC   592 _g_RG27SAV	=	0xfffc
                         0000FFFD   593 _g_SVFFFD	=	0xfffd
                         00000004   594 _g_CGTABL	=	0x0004
                         00000006   595 _g_VDP_DR	=	0x0006
                         00000007   596 _g_VDP_DW	=	0x0007
                         0000002B   597 _g_BASRVN	=	0x002b
                         0000002B   598 _g_ROMVersion	=	0x002b
                         0000002D   599 _g_MSXVER	=	0x002d
                         0000002E   600 _g_MSXMID	=	0x002e
                         00000034   601 _g_CHAR_16	=	0x0034
                         00000000   602 _g_SUBRID	=	0x0000
                         00000002   603 _g_STRSRC	=	0x0002
                         0000F30F   604 _g_KANJTABLE	=	0xf30f
                         0000F323   605 _g_DISKVE	=	0xf323
                         0000F325   606 _g_BREAKV	=	0xf325
                         0000F341   607 _g_RAMAD0	=	0xf341
                         0000F342   608 _g_RAMAD1	=	0xf342
                         0000F343   609 _g_RAMAD2	=	0xf343
                         0000F344   610 _g_RAMAD3	=	0xf344
                         0000F348   611 _g_MASTER	=	0xf348
                         0000F37D   612 _g_BDOS	=	0xf37d
                                    613 	.area _CODE
                                    614 	.area _INITIALIZER
                                    615 	.area _CABS (ABS)
