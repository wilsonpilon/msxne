                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module system
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _g_SLTSL
                                     12 	.globl _g_GRPACY
                                     13 	.globl _g_GRPACX
                                     14 	.globl _g_LOGOPR
                                     15 	.globl _g_CMASK
                                     16 	.globl _g_CLOC
                                     17 	.globl _g_FNKSTR
                                     18 	.globl _g_ATRBYT
                                     19 	.globl _g_BDRCLR
                                     20 	.globl _g_BAKCLR
                                     21 	.globl _g_FORCLR
                                     22 	.globl _g_CSRX
                                     23 	.globl _g_CSRY
                                     24 	.globl _g_CLIKSW
                                     25 	.globl _g_MLTPAT
                                     26 	.globl _g_MLTATR
                                     27 	.globl _g_MLTCGP
                                     28 	.globl _g_MLTCOL
                                     29 	.globl _g_MLTNAM
                                     30 	.globl _g_GRPPAT
                                     31 	.globl _g_GRPATR
                                     32 	.globl _g_GRPCGP
                                     33 	.globl _g_GRPCOL
                                     34 	.globl _g_GRPNAM
                                     35 	.globl _g_T32PAT
                                     36 	.globl _g_T32ATR
                                     37 	.globl _g_T32CGP
                                     38 	.globl _g_T32COL
                                     39 	.globl _g_T32NAM
                                     40 	.globl _g_TXTPAT
                                     41 	.globl _g_TXTATR
                                     42 	.globl _g_TXTCGP
                                     43 	.globl _g_TXTCOL
                                     44 	.globl _g_TXTNAM
                                     45 	.globl _g_CLMLST
                                     46 	.globl _g_CRTCNT
                                     47 	.globl _g_LINLEN
                                     48 	.globl _g_LINL32
                                     49 	.globl _g_LINL40
                                     50 	.globl _g_SVFFFD
                                     51 	.globl _g_RG27SAV
                                     52 	.globl _g_RG26SAV
                                     53 	.globl _g_RG25SAV
                                     54 	.globl _g_SVFFF8
                                     55 	.globl _g_MINROM
                                     56 	.globl _g_RG23SAV
                                     57 	.globl _g_RG22SAV
                                     58 	.globl _g_RG21SAV
                                     59 	.globl _g_RG20SAV
                                     60 	.globl _g_RG19SAV
                                     61 	.globl _g_RG18SAV
                                     62 	.globl _g_RG17SAV
                                     63 	.globl _g_RG16SAV
                                     64 	.globl _g_RG15SAV
                                     65 	.globl _g_RG14SAV
                                     66 	.globl _g_RG13SAV
                                     67 	.globl _g_RG12SAV
                                     68 	.globl _g_RG11SAV
                                     69 	.globl _g_RG10SAV
                                     70 	.globl _g_RG09SAV
                                     71 	.globl _g_RG08SAV
                                     72 	.globl _g_PROCNM
                                     73 	.globl _g_SLTWRK
                                     74 	.globl _g_SLTATR
                                     75 	.globl _g_SLTTBL
                                     76 	.globl _g_EXPTBL
                                     77 	.globl _g_MNROM
                                     78 	.globl _g_DRWANG
                                     79 	.globl _g_DRWSCL
                                     80 	.globl _g_DRWFLG
                                     81 	.globl _g_GYPOS
                                     82 	.globl _g_GXPOS
                                     83 	.globl _g_BRDATR
                                     84 	.globl _g_CASPRV
                                     85 	.globl _g_OLDSCR
                                     86 	.globl _g_SCRMOD
                                     87 	.globl _g_FLBMEM
                                     88 	.globl _g_KANAMD
                                     89 	.globl _g_KANAST
                                     90 	.globl _g_CAPST
                                     91 	.globl _g_CSTYLE
                                     92 	.globl _g_CSRSW
                                     93 	.globl _g_INSFLG
                                     94 	.globl _g_ESCCNT
                                     95 	.globl _g_GRPHED
                                     96 	.globl _g_WINWID
                                     97 	.globl _g_LOWLIM
                                     98 	.globl _g_INTCNT
                                     99 	.globl _g_INTVAL
                                    100 	.globl _g_JIFFY
                                    101 	.globl _g_PADX
                                    102 	.globl _g_PADY
                                    103 	.globl _g_INTFLG
                                    104 	.globl _g_RTYCNT
                                    105 	.globl _g_TRPTBL
                                    106 	.globl _g_HIMEM
                                    107 	.globl _g_BOTTOM
                                    108 	.globl _g_PATWRK
                                    109 	.globl _g_LINWRK
                                    110 	.globl _g_KEYBUF
                                    111 	.globl _g_NEWKEY
                                    112 	.globl _g_OLDKEY
                                    113 	.globl _g_CLIKFL
                                    114 	.globl _g_ONGSBF
                                    115 	.globl _g_FNKFLG
                                    116 	.globl _g_FNKSWI
                                    117 	.globl _g_CODSAV
                                    118 	.globl _g_FSTPOS
                                    119 	.globl _g_LINTTB
                                    120 	.globl _g_BASROM
                                    121 	.globl _g_ENSTOP
                                    122 	.globl _g_VCBC
                                    123 	.globl _g_VCBB
                                    124 	.globl _g_VCBA
                                    125 	.globl _g_PLYCNT
                                    126 	.globl _g_MUSICF
                                    127 	.globl _g_QUEUEN
                                    128 	.globl _g_MCLPTR
                                    129 	.globl _g_MCLLEN
                                    130 	.globl _g_SAVVOL
                                    131 	.globl _g_VOICEN
                                    132 	.globl _g_SAVSP
                                    133 	.globl _g_PRSCNT
                                    134 	.globl _g_LSTMOD
                                    135 	.globl _g_LSTCOM
                                    136 	.globl _g_COMMSK
                                    137 	.globl _g_ESTBLS
                                    138 	.globl _g_FLAGS
                                    139 	.globl _g_ERRORS
                                    140 	.globl _g_DATCNT
                                    141 	.globl _g_DEVNUM
                                    142 	.globl _g_OLDINT
                                    143 	.globl _g_OLDSTT
                                    144 	.globl _g_MEXBIh
                                    145 	.globl _g_RSIQLN
                                    146 	.globl _g_RSFCB
                                    147 	.globl _g_TOCNT
                                    148 	.globl _g_RSTMP
                                    149 	.globl _g_YSAVE
                                    150 	.globl _g_XSAVE
                                    151 	.globl _g_NORUSE
                                    152 	.globl _g_MODE
                                    153 	.globl _g_ROMA
                                    154 	.globl _g_CHRCNT
                                    155 	.globl _g_EXBRSA
                                    156 	.globl _g_AVCSAV
                                    157 	.globl _g_ACPAGE
                                    158 	.globl _g_DPPAGE
                                    159 	.globl _g_RS2IQ
                                    160 	.globl _g_VOICCQ
                                    161 	.globl _g_VOICBQ
                                    162 	.globl _g_VOICAQ
                                    163 	.globl _g_QUEBAK
                                    164 	.globl _g_QUETAB
                                    165 	.globl _g_ASPCT2
                                    166 	.globl _g_ASPCT1
                                    167 	.globl _g_HEADER
                                    168 	.globl _g_HIGH
                                    169 	.globl _g_LOW
                                    170 	.globl _g_CS240
                                    171 	.globl _g_CS120
                                    172 	.globl _g_GETPNT
                                    173 	.globl _g_PUTPNT
                                    174 	.globl _g_REPCNT
                                    175 	.globl _g_SCNCNT
                                    176 	.globl _g_FRCNEW
                                    177 	.globl _g_QUEUES
                                    178 	.globl _g_MINUPD
                                    179 	.globl _g_MAXUPD
                                    180 	.globl _g_TRGFLG
                                    181 	.globl _g_STATFL
                                    182 	.globl _g_RG7SAV
                                    183 	.globl _g_RG6SAV
                                    184 	.globl _g_RG5SAV
                                    185 	.globl _g_RG4SAV
                                    186 	.globl _g_RG3SAV
                                    187 	.globl _g_RG2SAV
                                    188 	.globl _g_RG1SAV
                                    189 	.globl _g_RG0SAV
                                    190 	.globl _g_CNSDFG
                                    191 	.globl _g_USRTAB
                                    192 	.globl _g_CLPRIM
                                    193 	.globl _g_WRPRIM
                                    194 	.globl _g_RDPRIM
                                    195 	.globl _Sys_GetPageSlot
                                    196 	.globl _Sys_SetPageSlot
                                    197 	.globl _Sys_SetPage0Slot
                                    198 	.globl _Sys_CheckSlot
                                    199 ;--------------------------------------------------------
                                    200 ; special function registers
                                    201 ;--------------------------------------------------------
                         000000A8   202 _g_PortPrimarySlot	=	0x00a8
                         000000A9   203 _g_PortReadKeyboard	=	0x00a9
                         000000AA   204 _g_PortAccessKeyboard	=	0x00aa
                         000000AB   205 _g_PortControl	=	0x00ab
                         00000098   206 _g_VDP_DataPort	=	0x0098
                         00000099   207 _g_VDP_RegPort	=	0x0099
                         00000099   208 _g_VDP_AddrPort	=	0x0099
                         00000099   209 _g_VDP_StatPort	=	0x0099
                         0000009A   210 _g_VDP_PalPort	=	0x009a
                         0000009B   211 _g_VDP_IRegPort	=	0x009b
                         000000A0   212 _g_PSG_RegPort	=	0x00a0
                         000000A1   213 _g_PSG_DataPort	=	0x00a1
                         000000A2   214 _g_PSG_StatPort	=	0x00a2
                         00000010   215 _g_PSG_Ext_RegPort	=	0x0010
                         00000011   216 _g_PSG_Ext_DataPort	=	0x0011
                         00000012   217 _g_PSG_Ext_StatPort	=	0x0012
                         0000007C   218 _g_MSXMusic_IndexPort	=	0x007c
                         0000007D   219 _g_MSXMusic_DataPort	=	0x007d
                         000000C0   220 _g_MSXAudio_IndexPort	=	0x00c0
                         000000C1   221 _g_MSXAudio_DataPort	=	0x00c1
                         000000C2   222 _g_MSXAudio_IndexPort2	=	0x00c2
                         000000C3   223 _g_MSXAudio_DataPort2	=	0x00c3
                         000000B4   224 _g_RTC_AddrPort	=	0x00b4
                         000000B5   225 _g_RTC_DataPort	=	0x00b5
                                    226 ;--------------------------------------------------------
                                    227 ; ram data
                                    228 ;--------------------------------------------------------
                                    229 	.area _DATA
                         0000F3AE   230 _g_LINL40	=	0xf3ae
                         0000F3AF   231 _g_LINL32	=	0xf3af
                         0000F3B0   232 _g_LINLEN	=	0xf3b0
                         0000F3B1   233 _g_CRTCNT	=	0xf3b1
                         0000F3B2   234 _g_CLMLST	=	0xf3b2
                         0000F3B3   235 _g_TXTNAM	=	0xf3b3
                         0000F3B5   236 _g_TXTCOL	=	0xf3b5
                         0000F3B7   237 _g_TXTCGP	=	0xf3b7
                         0000F3B9   238 _g_TXTATR	=	0xf3b9
                         0000F3BB   239 _g_TXTPAT	=	0xf3bb
                         0000F3BD   240 _g_T32NAM	=	0xf3bd
                         0000F3BF   241 _g_T32COL	=	0xf3bf
                         0000F3C1   242 _g_T32CGP	=	0xf3c1
                         0000F3C3   243 _g_T32ATR	=	0xf3c3
                         0000F3C5   244 _g_T32PAT	=	0xf3c5
                         0000F3C7   245 _g_GRPNAM	=	0xf3c7
                         0000F3C9   246 _g_GRPCOL	=	0xf3c9
                         0000F3CB   247 _g_GRPCGP	=	0xf3cb
                         0000F3CD   248 _g_GRPATR	=	0xf3cd
                         0000F3CF   249 _g_GRPPAT	=	0xf3cf
                         0000F3D1   250 _g_MLTNAM	=	0xf3d1
                         0000F3D3   251 _g_MLTCOL	=	0xf3d3
                         0000F3D5   252 _g_MLTCGP	=	0xf3d5
                         0000F3D7   253 _g_MLTATR	=	0xf3d7
                         0000F3D9   254 _g_MLTPAT	=	0xf3d9
                         0000F3DB   255 _g_CLIKSW	=	0xf3db
                         0000F3DC   256 _g_CSRY	=	0xf3dc
                         0000F3DD   257 _g_CSRX	=	0xf3dd
                         0000F3E9   258 _g_FORCLR	=	0xf3e9
                         0000F3EA   259 _g_BAKCLR	=	0xf3ea
                         0000F3EB   260 _g_BDRCLR	=	0xf3eb
                         0000F3F2   261 _g_ATRBYT	=	0xf3f2
                         0000F87F   262 _g_FNKSTR	=	0xf87f
                         0000F92A   263 _g_CLOC	=	0xf92a
                         0000F92C   264 _g_CMASK	=	0xf92c
                         0000FB02   265 _g_LOGOPR	=	0xfb02
                         0000FCB7   266 _g_GRPACX	=	0xfcb7
                         0000FCB9   267 _g_GRPACY	=	0xfcb9
                         0000FFFF   268 _g_SLTSL	=	0xffff
                                    269 ;--------------------------------------------------------
                                    270 ; ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area _INITIALIZED
                                    273 ;--------------------------------------------------------
                                    274 ; absolute external ram data
                                    275 ;--------------------------------------------------------
                                    276 	.area _DABS (ABS)
                                    277 ;--------------------------------------------------------
                                    278 ; global & static initialisations
                                    279 ;--------------------------------------------------------
                                    280 	.area _HOME
                                    281 	.area _GSINIT
                                    282 	.area _GSFINAL
                                    283 	.area _GSINIT
                                    284 ;--------------------------------------------------------
                                    285 ; Home
                                    286 ;--------------------------------------------------------
                                    287 	.area _HOME
                                    288 	.area _HOME
                                    289 ;--------------------------------------------------------
                                    290 ; code
                                    291 ;--------------------------------------------------------
                                    292 	.area _CODE
                                    293 ;C:\msx\engine/src/system.c:12: u8 Sys_GetPageSlot(u8 page)
                                    294 ;	---------------------------------
                                    295 ; Function Sys_GetPageSlot
                                    296 ; ---------------------------------
    00000000                        297 _Sys_GetPageSlot::
    00000000 5F               [ 4]  298 	ld	e, a
                                    299 ;C:\msx\engine/src/system.c:15: u8 slot = (g_PortPrimarySlot >> (page * 2)) & 0x03;
    00000001 CB 23            [ 8]  300 	sla	e
    00000003 43               [ 4]  301 	ld	b, e
    00000004 DB A8            [11]  302 	in	a, (_g_PortPrimarySlot)
    00000006 4F               [ 4]  303 	ld	c, a
    00000007 04               [ 4]  304 	inc	b
    00000008 C3r0Dr00         [10]  305 	jp	00113$
    0000000B                        306 00112$:
    0000000B CB 39            [ 8]  307 	srl	c
    0000000D                        308 00113$:
    0000000D 10 FC            [13]  309 	djnz	00112$
    0000000F 79               [ 4]  310 	ld	a, c
    00000010 E6 03            [ 7]  311 	and	a, #0x03
    00000012 4F               [ 4]  312 	ld	c, a
                                    313 ;C:\msx\engine/src/system.c:18: if(g_EXPTBL[slot] & SLOT_EXP)
    00000013 21 C1 FC         [10]  314 	ld	hl, #_g_EXPTBL+0
    00000016 06 00            [ 7]  315 	ld	b, #0x00
    00000018 09               [11]  316 	add	hl, bc
    00000019 7E               [ 7]  317 	ld	a, (hl)
    0000001A 07               [ 4]  318 	rlca
    0000001B 30 34            [12]  319 	jr	NC, 00102$
                                    320 ;C:\msx\engine/src/system.c:20: u8 prevSlot = g_PortPrimarySlot; // Backup current primary slots register
    0000001D DB A8            [11]  321 	in	a, (_g_PortPrimarySlot)
    0000001F 47               [ 4]  322 	ld	b, a
                                    323 ;C:\msx\engine/src/system.h:136: inline void DisableInterrupt() { __asm__("di"); }
    00000020 F3               [ 4]  324 	di
                                    325 ;C:\msx\engine/src/system.c:22: g_PortPrimarySlot = (prevSlot & 0x3F) | (slot << 6); // Select primary slot in page 3
    00000021 78               [ 4]  326 	ld	a, b
    00000022 E6 3F            [ 7]  327 	and	a, #0x3f
    00000024 6F               [ 4]  328 	ld	l, a
                                    329 ;	spillPairReg hl
                                    330 ;	spillPairReg hl
    00000025 79               [ 4]  331 	ld	a, c
    00000026 0F               [ 4]  332 	rrca
    00000027 0F               [ 4]  333 	rrca
    00000028 E6 C0            [ 7]  334 	and	a, #0xc0
    0000002A B5               [ 4]  335 	or	a, l
    0000002B D3 A8            [11]  336 	out	(_g_PortPrimarySlot), a
                                    337 ;C:\msx\engine/src/system.c:23: slot |= SLOT_EXP;
    0000002D CB F9            [ 8]  338 	set	7, c
                                    339 ;C:\msx\engine/src/system.c:24: slot |= (((~g_SLTSL) >> (page * 2)) & 0x03) << 2;
    0000002F 3A FF FF         [13]  340 	ld	a, (_g_SLTSL+0)
    00000032 6F               [ 4]  341 	ld	l, a
                                    342 ;	spillPairReg hl
                                    343 ;	spillPairReg hl
    00000033 26 00            [ 7]  344 	ld	h, #0x00
                                    345 ;	spillPairReg hl
                                    346 ;	spillPairReg hl
    00000035 7D               [ 4]  347 	ld	a, l
    00000036 2F               [ 4]  348 	cpl
    00000037 6F               [ 4]  349 	ld	l, a
                                    350 ;	spillPairReg hl
                                    351 ;	spillPairReg hl
    00000038 7C               [ 4]  352 	ld	a, h
    00000039 2F               [ 4]  353 	cpl
    0000003A 67               [ 4]  354 	ld	h, a
                                    355 ;	spillPairReg hl
                                    356 ;	spillPairReg hl
    0000003B 1C               [ 4]  357 	inc	e
    0000003C C3r43r00         [10]  358 	jp	00116$
    0000003F                        359 00115$:
    0000003F CB 2C            [ 8]  360 	sra	h
    00000041 CB 1D            [ 8]  361 	rr	l
    00000043                        362 00116$:
    00000043 1D               [ 4]  363 	dec	e
    00000044 20 F9            [12]  364 	jr	NZ, 00115$
    00000046 7D               [ 4]  365 	ld	a, l
    00000047 E6 03            [ 7]  366 	and	a, #0x03
    00000049 87               [ 4]  367 	add	a, a
    0000004A 87               [ 4]  368 	add	a, a
    0000004B B1               [ 4]  369 	or	a, c
    0000004C 4F               [ 4]  370 	ld	c, a
                                    371 ;C:\msx\engine/src/system.c:25: g_PortPrimarySlot = prevSlot; // Restore primary slots register
    0000004D 78               [ 4]  372 	ld	a, b
    0000004E D3 A8            [11]  373 	out	(_g_PortPrimarySlot), a
                                    374 ;C:\msx\engine/src/system.h:132: inline void EnableInterrupt() { __asm__("ei"); }
    00000050 FB               [ 4]  375 	ei
                                    376 ;C:\msx\engine/src/system.c:26: EnableInterrupt();
    00000051                        377 00102$:
                                    378 ;C:\msx\engine/src/system.c:28: return slot;
    00000051 79               [ 4]  379 	ld	a, c
                                    380 ;C:\msx\engine/src/system.c:29: }
    00000052 C9               [10]  381 	ret
                         0000F380   382 _g_RDPRIM	=	0xf380
                         0000F385   383 _g_WRPRIM	=	0xf385
                         0000F38C   384 _g_CLPRIM	=	0xf38c
                         0000F39A   385 _g_USRTAB	=	0xf39a
                         0000F3DE   386 _g_CNSDFG	=	0xf3de
                         0000F3DF   387 _g_RG0SAV	=	0xf3df
                         0000F3E0   388 _g_RG1SAV	=	0xf3e0
                         0000F3E1   389 _g_RG2SAV	=	0xf3e1
                         0000F3E2   390 _g_RG3SAV	=	0xf3e2
                         0000F3E3   391 _g_RG4SAV	=	0xf3e3
                         0000F3E4   392 _g_RG5SAV	=	0xf3e4
                         0000F3E5   393 _g_RG6SAV	=	0xf3e5
                         0000F3E6   394 _g_RG7SAV	=	0xf3e6
                         0000F3E7   395 _g_STATFL	=	0xf3e7
                         0000F3E8   396 _g_TRGFLG	=	0xf3e8
                         0000F3EC   397 _g_MAXUPD	=	0xf3ec
                         0000F3EF   398 _g_MINUPD	=	0xf3ef
                         0000F3F3   399 _g_QUEUES	=	0xf3f3
                         0000F3F5   400 _g_FRCNEW	=	0xf3f5
                         0000F3F6   401 _g_SCNCNT	=	0xf3f6
                         0000F3F7   402 _g_REPCNT	=	0xf3f7
                         0000F3F8   403 _g_PUTPNT	=	0xf3f8
                         0000F3FA   404 _g_GETPNT	=	0xf3fa
                         0000F3FC   405 _g_CS120	=	0xf3fc
                         0000F401   406 _g_CS240	=	0xf401
                         0000F406   407 _g_LOW	=	0xf406
                         0000F408   408 _g_HIGH	=	0xf408
                         0000F40A   409 _g_HEADER	=	0xf40a
                         0000F40B   410 _g_ASPCT1	=	0xf40b
                         0000F40D   411 _g_ASPCT2	=	0xf40d
                         0000F959   412 _g_QUETAB	=	0xf959
                         0000F971   413 _g_QUEBAK	=	0xf971
                         0000F975   414 _g_VOICAQ	=	0xf975
                         0000F9F5   415 _g_VOICBQ	=	0xf9f5
                         0000FA75   416 _g_VOICCQ	=	0xfa75
                         0000FAF5   417 _g_RS2IQ	=	0xfaf5
                         0000FAF5   418 _g_DPPAGE	=	0xfaf5
                         0000FAF6   419 _g_ACPAGE	=	0xfaf6
                         0000FAF7   420 _g_AVCSAV	=	0xfaf7
                         0000FAF8   421 _g_EXBRSA	=	0xfaf8
                         0000FAF9   422 _g_CHRCNT	=	0xfaf9
                         0000FAFA   423 _g_ROMA	=	0xfafa
                         0000FAFC   424 _g_MODE	=	0xfafc
                         0000FAFD   425 _g_NORUSE	=	0xfafd
                         0000FAFE   426 _g_XSAVE	=	0xfafe
                         0000FB00   427 _g_YSAVE	=	0xfb00
                         0000FB03   428 _g_RSTMP	=	0xfb03
                         0000FB03   429 _g_TOCNT	=	0xfb03
                         0000FB04   430 _g_RSFCB	=	0xfb04
                         0000FB06   431 _g_RSIQLN	=	0xfb06
                         0000FB07   432 _g_MEXBIh	=	0xfb07
                         0000FB0C   433 _g_OLDSTT	=	0xfb0c
                         0000FB0C   434 _g_OLDINT	=	0xfb0c
                         0000FB16   435 _g_DEVNUM	=	0xfb16
                         0000FB17   436 _g_DATCNT	=	0xfb17
                         0000FB1A   437 _g_ERRORS	=	0xfb1a
                         0000FB1B   438 _g_FLAGS	=	0xfb1b
                         0000FB1C   439 _g_ESTBLS	=	0xfb1c
                         0000FB1D   440 _g_COMMSK	=	0xfb1d
                         0000FB1E   441 _g_LSTCOM	=	0xfb1e
                         0000FB1F   442 _g_LSTMOD	=	0xfb1f
                         0000FB35   443 _g_PRSCNT	=	0xfb35
                         0000FB36   444 _g_SAVSP	=	0xfb36
                         0000FB38   445 _g_VOICEN	=	0xfb38
                         0000FB39   446 _g_SAVVOL	=	0xfb39
                         0000FB3B   447 _g_MCLLEN	=	0xfb3b
                         0000FB3C   448 _g_MCLPTR	=	0xfb3c
                         0000FB3E   449 _g_QUEUEN	=	0xfb3e
                         0000FB3F   450 _g_MUSICF	=	0xfb3f
                         0000FB40   451 _g_PLYCNT	=	0xfb40
                         0000FB41   452 _g_VCBA	=	0xfb41
                         0000FB66   453 _g_VCBB	=	0xfb66
                         0000FB8B   454 _g_VCBC	=	0xfb8b
                         0000FBB0   455 _g_ENSTOP	=	0xfbb0
                         0000FBB1   456 _g_BASROM	=	0xfbb1
                         0000FBB2   457 _g_LINTTB	=	0xfbb2
                         0000FBCA   458 _g_FSTPOS	=	0xfbca
                         0000FBCC   459 _g_CODSAV	=	0xfbcc
                         0000FBCD   460 _g_FNKSWI	=	0xfbcd
                         0000FBCE   461 _g_FNKFLG	=	0xfbce
                         0000FBD8   462 _g_ONGSBF	=	0xfbd8
                         0000FBD9   463 _g_CLIKFL	=	0xfbd9
                         0000FBDA   464 _g_OLDKEY	=	0xfbda
                         0000FBE5   465 _g_NEWKEY	=	0xfbe5
                         0000FBF0   466 _g_KEYBUF	=	0xfbf0
                         0000FC18   467 _g_LINWRK	=	0xfc18
                         0000FC40   468 _g_PATWRK	=	0xfc40
                         0000FC48   469 _g_BOTTOM	=	0xfc48
                         0000FC4A   470 _g_HIMEM	=	0xfc4a
                         0000FC4C   471 _g_TRPTBL	=	0xfc4c
                         0000FC9A   472 _g_RTYCNT	=	0xfc9a
                         0000FC9B   473 _g_INTFLG	=	0xfc9b
                         0000FC9C   474 _g_PADY	=	0xfc9c
                         0000FC9D   475 _g_PADX	=	0xfc9d
                         0000FC9E   476 _g_JIFFY	=	0xfc9e
                         0000FCA0   477 _g_INTVAL	=	0xfca0
                         0000FCA2   478 _g_INTCNT	=	0xfca2
                         0000FCA4   479 _g_LOWLIM	=	0xfca4
                         0000FCA5   480 _g_WINWID	=	0xfca5
                         0000FCA6   481 _g_GRPHED	=	0xfca6
                         0000FCA7   482 _g_ESCCNT	=	0xfca7
                         0000FCA8   483 _g_INSFLG	=	0xfca8
                         0000FCA9   484 _g_CSRSW	=	0xfca9
                         0000FCAA   485 _g_CSTYLE	=	0xfcaa
                         0000FCAB   486 _g_CAPST	=	0xfcab
                         0000FCAC   487 _g_KANAST	=	0xfcac
                         0000FCAD   488 _g_KANAMD	=	0xfcad
                         0000FCAE   489 _g_FLBMEM	=	0xfcae
                         0000FCAF   490 _g_SCRMOD	=	0xfcaf
                         0000FCB0   491 _g_OLDSCR	=	0xfcb0
                         0000FCB1   492 _g_CASPRV	=	0xfcb1
                         0000FCB2   493 _g_BRDATR	=	0xfcb2
                         0000FCB3   494 _g_GXPOS	=	0xfcb3
                         0000FCB5   495 _g_GYPOS	=	0xfcb5
                         0000FCBB   496 _g_DRWFLG	=	0xfcbb
                         0000FCBC   497 _g_DRWSCL	=	0xfcbc
                         0000FCBD   498 _g_DRWANG	=	0xfcbd
                         0000FCC1   499 _g_MNROM	=	0xfcc1
                         0000FCC1   500 _g_EXPTBL	=	0xfcc1
                         0000FCC5   501 _g_SLTTBL	=	0xfcc5
                         0000FCC9   502 _g_SLTATR	=	0xfcc9
                         0000FD09   503 _g_SLTWRK	=	0xfd09
                         0000FD89   504 _g_PROCNM	=	0xfd89
                         0000FFE7   505 _g_RG08SAV	=	0xffe7
                         0000FFE8   506 _g_RG09SAV	=	0xffe8
                         0000FFE9   507 _g_RG10SAV	=	0xffe9
                         0000FFEA   508 _g_RG11SAV	=	0xffea
                         0000FFEB   509 _g_RG12SAV	=	0xffeb
                         0000FFEC   510 _g_RG13SAV	=	0xffec
                         0000FFED   511 _g_RG14SAV	=	0xffed
                         0000FFEE   512 _g_RG15SAV	=	0xffee
                         0000FFEF   513 _g_RG16SAV	=	0xffef
                         0000FFF0   514 _g_RG17SAV	=	0xfff0
                         0000FFF1   515 _g_RG18SAV	=	0xfff1
                         0000FFF2   516 _g_RG19SAV	=	0xfff2
                         0000FFF3   517 _g_RG20SAV	=	0xfff3
                         0000FFF4   518 _g_RG21SAV	=	0xfff4
                         0000FFF5   519 _g_RG22SAV	=	0xfff5
                         0000FFF6   520 _g_RG23SAV	=	0xfff6
                         0000FFF7   521 _g_MINROM	=	0xfff7
                         0000FFF8   522 _g_SVFFF8	=	0xfff8
                         0000FFFA   523 _g_RG25SAV	=	0xfffa
                         0000FFFB   524 _g_RG26SAV	=	0xfffb
                         0000FFFC   525 _g_RG27SAV	=	0xfffc
                         0000FFFD   526 _g_SVFFFD	=	0xfffd
                                    527 ;C:\msx\engine/src/system.c:33: void Sys_SetPageSlot(u8 page, u8 slotId)
                                    528 ;	---------------------------------
                                    529 ; Function Sys_SetPageSlot
                                    530 ; ---------------------------------
    00000053                        531 _Sys_SetPageSlot::
                                    532 ;C:\msx\engine/src/system.c:36: slotId;
                                    533 ;C:\msx\engine/src/system.c:60: }
    00000053 C9               [10]  534 	ret
                                    535 ;C:\msx\engine/src/system.c:64: void Sys_SetPage0Slot(u8 slotId)
                                    536 ;	---------------------------------
                                    537 ; Function Sys_SetPage0Slot
                                    538 ; ---------------------------------
    00000054                        539 _Sys_SetPage0Slot::
                                    540 ;C:\msx\engine/src/system.c:134: __endasm;
    00000054 4F               [ 4]  541 	ld	c, a
    00000055 E6 80            [ 7]  542 	and	#0b10000000
    00000057 CAr8Br00         [10]  543 	jp	z, SetNonExpendedSlot
    0000005A                        544 	 SetExpendedSlot:
    0000005A 79               [ 4]  545 	ld	a, c
    0000005B E6 03            [ 7]  546 	and	#0b00000011
    0000005D 57               [ 4]  547 	ld	d, a
    0000005E 0F               [ 4]  548 	rrca	
    0000005F 0F               [ 4]  549 	rrca 
    00000060 E6 C0            [ 7]  550 	and a, #0xC0
    00000062 B2               [ 4]  551 	or	d
    00000063 57               [ 4]  552 	ld	d, a
    00000064 DB A8            [11]  553 	in	a, (0xA8)
    00000066 47               [ 4]  554 	ld	b, a
    00000067 E6 3C            [ 7]  555 	and	#0b00111100
    00000069 B2               [ 4]  556 	or	d
    0000006A F3               [ 4]  557 	di
    0000006B D3 A8            [11]  558 	out	(0xA8), a
    0000006D 79               [ 4]  559 	ld	a, c
    0000006E 0F               [ 4]  560 	rrca	
    0000006F 0F               [ 4]  561 	rrca 
    00000070 E6 3F            [ 7]  562 	and a, #0x3F
    00000072 E6 03            [ 7]  563 	and	#0b00000011
    00000074 57               [ 4]  564 	ld	d, a
    00000075 3A FF FF         [13]  565 	ld	a,(0xFFFF)
    00000078 2F               [ 4]  566 	cpl
    00000079 E6 FC            [ 7]  567 	and	#0b11111100
    0000007B B2               [ 4]  568 	or	d
    0000007C 32 FF FF         [13]  569 	ld	(0xFFFF), a
    0000007F 78               [ 4]  570 	ld	a, b
    00000080 E6 C0            [ 7]  571 	and	#0b11000000
    00000082 47               [ 4]  572 	ld	b, a
    00000083 DB A8            [11]  573 	in	a, (0xA8)
    00000085 E6 3F            [ 7]  574 	and	#0b00111111
    00000087 B0               [ 4]  575 	or	b
    00000088 D3 A8            [11]  576 	out	(0xA8), a
    0000008A C9               [10]  577 	ret
    0000008B                        578 	 SetNonExpendedSlot:
    0000008B 79               [ 4]  579 	ld	a, c
    0000008C E6 03            [ 7]  580 	and	#0b00000011
    0000008E 57               [ 4]  581 	ld	d, a
    0000008F DB A8            [11]  582 	in	a, (0xA8)
    00000091 47               [ 4]  583 	ld	b, a
    00000092 E6 FC            [ 7]  584 	and	#0b11111100
    00000094 B2               [ 4]  585 	or	d
    00000095 F3               [ 4]  586 	di
    00000096 D3 A8            [11]  587 	out	(0xA8), a
    00000098 C9               [10]  588 	ret
                                    589 ;C:\msx\engine/src/system.c:136: }
    00000099 C9               [10]  590 	ret
                                    591 ;C:\msx\engine/src/system.c:140: u8 Sys_CheckSlot(CheckSlotCallback cb)
                                    592 ;	---------------------------------
                                    593 ; Function Sys_CheckSlot
                                    594 ; ---------------------------------
    0000009A                        595 _Sys_CheckSlot::
    0000009A DD E5            [15]  596 	push	ix
    0000009C DD 21 00 00      [14]  597 	ld	ix,#0
    000000A0 DD 39            [15]  598 	add	ix,sp
    000000A2 3B               [ 6]  599 	dec	sp
                                    600 ;C:\msx\engine/src/system.c:142: for(u8 slot = 0; slot < 4; ++slot)
    000000A3 01 00 00         [10]  601 	ld	bc, #0x0
    000000A6                        602 00114$:
    000000A6 78               [ 4]  603 	ld	a, b
    000000A7 D6 04            [ 7]  604 	sub	a, #0x04
    000000A9 30 4D            [12]  605 	jr	NC, 00109$
                                    606 ;C:\msx\engine/src/system.c:144: if(g_EXPTBL[slot] & SLOT_EXP)
    000000AB 11 C1 FC         [10]  607 	ld	de, #_g_EXPTBL+0
    000000AE 7B               [ 4]  608 	ld	a, e
    000000AF 80               [ 4]  609 	add	a, b
    000000B0 5F               [ 4]  610 	ld	e, a
    000000B1 30 01            [12]  611 	jr	NC, 00153$
    000000B3 14               [ 4]  612 	inc	d
    000000B4                        613 00153$:
    000000B4 1A               [ 7]  614 	ld	a, (de)
    000000B5 07               [ 4]  615 	rlca
    000000B6 30 2C            [12]  616 	jr	NC, 00107$
                                    617 ;C:\msx\engine/src/system.c:146: for(u8 sub = 0; sub < 4; ++sub)
    000000B8 78               [ 4]  618 	ld	a, b
    000000B9 E6 03            [ 7]  619 	and	a, #0x03
    000000BB DD 77 FF         [19]  620 	ld	-1 (ix), a
    000000BE 0E 00            [ 7]  621 	ld	c, #0x00
    000000C0                        622 00111$:
                                    623 ;C:\msx\engine/src/system.c:148: u8 slotId = SLOTEX(slot, sub);
    000000C0 79               [ 4]  624 	ld	a,c
    000000C1 FE 04            [ 7]  625 	cp	a,#0x04
    000000C3 30 2E            [12]  626 	jr	NC, 00115$
    000000C5 E6 03            [ 7]  627 	and	a, #0x03
    000000C7 87               [ 4]  628 	add	a, a
    000000C8 87               [ 4]  629 	add	a, a
    000000C9 DD B6 FF         [19]  630 	or	a, -1 (ix)
    000000CC 5F               [ 4]  631 	ld	e, a
    000000CD CB FB            [ 8]  632 	set	7, e
                                    633 ;C:\msx\engine/src/system.c:149: if(cb(slotId))
    000000CF E5               [11]  634 	push	hl
    000000D0 C5               [11]  635 	push	bc
    000000D1 D5               [11]  636 	push	de
    000000D2 7B               [ 4]  637 	ld	a, e
    000000D3 CDr00r00         [17]  638 	call	___sdcc_call_hl
    000000D6 D1               [10]  639 	pop	de
    000000D7 C1               [10]  640 	pop	bc
    000000D8 E1               [10]  641 	pop	hl
    000000D9 B7               [ 4]  642 	or	a, a
    000000DA 28 04            [12]  643 	jr	Z, 00112$
                                    644 ;C:\msx\engine/src/system.c:150: return slotId;
    000000DC 7B               [ 4]  645 	ld	a, e
    000000DD C3rFAr00         [10]  646 	jp	00116$
    000000E0                        647 00112$:
                                    648 ;C:\msx\engine/src/system.c:146: for(u8 sub = 0; sub < 4; ++sub)
    000000E0 0C               [ 4]  649 	inc	c
    000000E1 C3rC0r00         [10]  650 	jp	00111$
    000000E4                        651 00107$:
                                    652 ;C:\msx\engine/src/system.c:153: else if(cb(slot))
    000000E4 E5               [11]  653 	push	hl
    000000E5 C5               [11]  654 	push	bc
    000000E6 78               [ 4]  655 	ld	a, b
    000000E7 CDr00r00         [17]  656 	call	___sdcc_call_hl
    000000EA C1               [10]  657 	pop	bc
    000000EB E1               [10]  658 	pop	hl
    000000EC B7               [ 4]  659 	or	a, a
    000000ED 28 04            [12]  660 	jr	Z, 00115$
                                    661 ;C:\msx\engine/src/system.c:154: return slot;
    000000EF 79               [ 4]  662 	ld	a, c
    000000F0 C3rFAr00         [10]  663 	jp	00116$
    000000F3                        664 00115$:
                                    665 ;C:\msx\engine/src/system.c:142: for(u8 slot = 0; slot < 4; ++slot)
    000000F3 04               [ 4]  666 	inc	b
    000000F4 48               [ 4]  667 	ld	c, b
    000000F5 C3rA6r00         [10]  668 	jp	00114$
    000000F8                        669 00109$:
                                    670 ;C:\msx\engine/src/system.c:156: return SLOT_NOTFOUND;
    000000F8 3E FF            [ 7]  671 	ld	a, #0xff
    000000FA                        672 00116$:
                                    673 ;C:\msx\engine/src/system.c:157: }
    000000FA 33               [ 6]  674 	inc	sp
    000000FB DD E1            [14]  675 	pop	ix
    000000FD C9               [10]  676 	ret
                                    677 	.area _CODE
                                    678 	.area _INITIALIZER
                                    679 	.area _CABS (ABS)
